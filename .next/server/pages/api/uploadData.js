"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/uploadData";
exports.ids = ["pages/api/uploadData"];
exports.modules = {

/***/ "ethers":
/*!*************************!*\
  !*** external "ethers" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("ethers");

/***/ }),

/***/ "formidable":
/*!*****************************!*\
  !*** external "formidable" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("formidable");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "@web3-storage/w3up-client":
/*!********************************************!*\
  !*** external "@web3-storage/w3up-client" ***!
  \********************************************/
/***/ ((module) => {

module.exports = import("@web3-storage/w3up-client");;

/***/ }),

/***/ "files-from-path":
/*!**********************************!*\
  !*** external "files-from-path" ***!
  \**********************************/
/***/ ((module) => {

module.exports = import("files-from-path");;

/***/ }),

/***/ "web3.storage":
/*!*******************************!*\
  !*** external "web3.storage" ***!
  \*******************************/
/***/ ((module) => {

module.exports = import("web3.storage");;

/***/ }),

/***/ "(api)/./pages/api/uploadData.js":
/*!*********************************!*\
  !*** ./pages/api/uploadData.js ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"config\": () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var web3_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3.storage */ \"web3.storage\");\n/* harmony import */ var files_from_path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! files-from-path */ \"files-from-path\");\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constant */ \"(api)/./pages/constant.js\");\n/* harmony import */ var formidable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! formidable */ \"formidable\");\n/* harmony import */ var formidable__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(formidable__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _web3_storage_w3up_client__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @web3-storage/w3up-client */ \"@web3-storage/w3up-client\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([web3_storage__WEBPACK_IMPORTED_MODULE_0__, files_from_path__WEBPACK_IMPORTED_MODULE_1__, _web3_storage_w3up_client__WEBPACK_IMPORTED_MODULE_5__]);\n([web3_storage__WEBPACK_IMPORTED_MODULE_0__, files_from_path__WEBPACK_IMPORTED_MODULE_1__, _web3_storage_w3up_client__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst { ethers  } = __webpack_require__(/*! ethers */ \"ethers\");\n\n\n\n\n\nconst config = {\n    api: {\n        bodyParser: false // disable built-in body parser\n    }\n};\nfunction moveFiletoServer(req) {\n    return new Promise((resolve, reject)=>{\n        const options = {};\n        options.uploadDir = path__WEBPACK_IMPORTED_MODULE_4___default().join(process.cwd(), \"/pages/uploads\");\n        options.filename = (name, ext, path, form)=>{\n            return path.originalFilename;\n        };\n        const form = formidable__WEBPACK_IMPORTED_MODULE_3___default()(options);\n        form.parse(req, (err, fields, files)=>{\n            if (err) {\n                console.error(err);\n                reject(\"Something went wrong\");\n                return;\n            }\n            const uniqueFileName = fields.filename;\n            const actualFileName = files.file.originalFilename;\n            resolve({\n                uniqueFileName,\n                actualFileName\n            });\n        });\n    });\n}\nasync function storeDataInBlockchain(actualFileName, uniqueFileName) {\n    const provider = new ethers.providers.JsonRpcProvider(_constant__WEBPACK_IMPORTED_MODULE_2__.API_URL);\n    const signer = new ethers.Wallet(_constant__WEBPACK_IMPORTED_MODULE_2__.PRIVATE_KEY, provider);\n    const StorageContract = new ethers.Contract(_constant__WEBPACK_IMPORTED_MODULE_2__.contractAddress, _constant__WEBPACK_IMPORTED_MODULE_2__.contractAbi, signer);\n    const isStored = await StorageContract.isFileStored(uniqueFileName);\n    console.log(isStored);\n    if (isStored == false) {\n        const storage = await (0,_web3_storage_w3up_client__WEBPACK_IMPORTED_MODULE_5__.create)();\n        console.log(\"client\", storage.did());\n        const space = await storage.createSpace(\"my-awesome-space\");\n        const myAccount = await storage.login(\"arun.kustwar.23@gmail.com\");\n        // wait for payment plan to be selected\n        while(true){\n            const res = await myAccount.plan.get();\n            if (res.ok) break;\n            console.log(\"Waiting for payment plan to be selected...\");\n            await new Promise((resolve)=>setTimeout(resolve, 1000));\n        }\n        await myAccount.provision(space.did());\n        await space.save();\n        const uploadPath = path__WEBPACK_IMPORTED_MODULE_4___default().join(process.cwd(), \"./pages/uploads/\");\n        console.log(\"uploadPath is : \", uploadPath);\n        const files = await (0,web3_storage__WEBPACK_IMPORTED_MODULE_0__.getFilesFromPath)(uploadPath, `/${actualFileName}`);\n        console.log(\"file is : \", files);\n        const cid = await storage.uploadFile(files);\n        let hash = cid.toString();\n        // await sharkDaoSpace.save()\n        console.log(\"Storing the data in IPFS\");\n        const tx = await StorageContract.upload(uniqueFileName, hash);\n        await tx.wait();\n        const storedhash = await StorageContract.getIPFSHash(uniqueFileName);\n        return {\n            message: `IPFS hash is stored in the smart contract: ${storedhash}`\n        };\n    // myAccount = await storage.login('arun.kustwar.23@gmail.com')\n    // const sharkDaoSpace = await storage.createSpace('sharkDAO.xyz')\n    // await myAccount.provision(sharkDaoSpace.did())\n    // await storage.addSpace(await sharkDaoSpace.createAuthorization(storage))\n    // await storage.setCurrentSpace(sharkDaoSpace.did())\n    // const uploadPath = path.join(process.cwd(), \"/pages/uploads\");\n    // console.log(\"uploadPath is : \", uploadPath);\n    // const files = await getFilesFromPath(uploadPath, `/${actualFileName}`);\n    // console.log(\"file is : \", files);\n    // const cid = await storage.uploadDirectory(files)\n    // let hash = cid.toString();\n    // // await sharkDaoSpace.save()\n    // console.log(\"Storing the data in IPFS\");\n    // const tx = await StorageContract.upload(uniqueFileName, hash);\n    // await tx.wait();\n    // const storedhash = await StorageContract.getIPFSHash(uniqueFileName);\n    // return {message: `IPFS hash is stored in the smart contract: ${storedhash}`}\n    // await storage.setCurrentSpace('z4MXj1wBzi9jUstyPvJWLDwMc2xX2haCe7fLWjL2CgfvwvPrwxSiZxNEAuQ87GMxYi2UuFauh3WhBkJH3bJkrsSXedYXBBvUaY5j7ksw4sTs5fdMZgyfUenobmxWdsQ5TTTe79qC7Js96JwjhVoNQ5Bmb26eVZamK2vtkE8Wg6MxzCjKvAQT2xds5nn44Yurskkp2gYL8NYo7wsdD2HLUNTpNaWMg8fAqTYUhowofzpJepJW1po34G34CBsX2PvbedDkQU2SRhp3UTC1UncyNfte4nJMdiaACSPapvfSTP11KuqmYfkxSNwCo9vJzxLWQsNhnhAhggqfzJyGxj7tDNJM2WVS3FCTGnkr3moVyBbxa2GAweas2');\n    // const uploadPath = path.join(process.cwd(), \"/pages/uploads\");\n    // const files = await getFilesFromPath(uploadPath, `/${actualFileName}`);\n    // const cid = await storage.uploadDirectory(files)\n    // let hash = cid.toString();\n    // console.log(\"Storing the data in IPFS\");\n    // const tx = await StorageContract.upload(uniqueFileName, hash);\n    // await tx.wait();\n    // const storedhash = await StorageContract.getIPFSHash(uniqueFileName);\n    // return {message: `IPFS hash is stored in the smart contract: ${storedhash}`}\n    // const token = \"z6Mkgo4btoiG3NsNmUCPbwbNeDdwes7hQozgfV7Vi9ZsVi9G\";\n    // const storage = new Web3Storage({token: token});\n    // const uploadPath = path.join(process.cwd(), \"/pages/uploads\");\n    // const files = await getFilesFromPath(uploadPath, `/${actualFileName}`);\n    // const cid = await storage.put(files);\n    // let hash = cid.toString();\n    // console.log(\"Storing the data in IPFS\");\n    // const tx = await StorageContract.upload(uniqueFileName, hash);\n    // await tx.wait();\n    // const storedhash = await StorageContract.getIPFSHash(uniqueFileName);\n    // return {message: `IPFS hash is stored in the smart contract: ${storedhash}`}\n    } else {\n        console.log(\"Data is already stored for this file name\");\n        const IPFShash = await StorageContract.getIPFSHash(uniqueFileName);\n        return {\n            message: `IPFS hash is already stored in the smart contract: ${IPFShash}`\n        };\n    }\n}\n// we are moving files from local pc to this server directoy\n// we are going to store file in IPFS\n// we are going to store IPFS hash in blockchain\nasync function handler(req, res) {\n    try {\n        const { uniqueFileName , actualFileName  } = await moveFiletoServer(req);\n        console.log(\"Files are stored in local server\");\n        await new Promise((resolve)=>setTimeout(resolve, 2000)); //waiting for 2 seconds\n        const resposne = await storeDataInBlockchain(actualFileName, uniqueFileName);\n        console.log(\"Hash stored in smart contract\");\n        return res.status(200).json(resposne);\n    } catch (err) {\n        console.error(err);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (handler);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/uploadData.js\n");

/***/ }),

/***/ "(api)/./pages/constant.js":
/*!***************************!*\
  !*** ./pages/constant.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"API_URL\": () => (/* binding */ API_URL),\n/* harmony export */   \"PRIVATE_KEY\": () => (/* binding */ PRIVATE_KEY),\n/* harmony export */   \"contractAbi\": () => (/* binding */ contractAbi),\n/* harmony export */   \"contractAddress\": () => (/* binding */ contractAddress)\n/* harmony export */ });\nconst API_URL = \"https://eth-holesky.blastapi.io/ee728cc4-2cc0-4b5e-9515-8056a00e5e72\";\nconst PRIVATE_KEY = \"6c0b0177df369e0dadb20f18806b81e97bd8aefa9e965899c45c936c38387c20\";\nconst contractAddress = \"0x5d4125d1ceac76e875120c8b7d58dc4572431b87\";\nconst contractAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"fileName\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"ipfsHash\",\n                \"type\": \"string\"\n            }\n        ],\n        \"name\": \"upload\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"fileName\",\n                \"type\": \"string\"\n            }\n        ],\n        \"name\": \"getIPFSHash\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"fileName\",\n                \"type\": \"string\"\n            }\n        ],\n        \"name\": \"isFileStored\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9jb25zdGFudC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU8sTUFBTUEsVUFBVSx1RUFBdUU7QUFDdkYsTUFBTUMsY0FBYSxtRUFBbUU7QUFDdEYsTUFBTUMsa0JBQWtCLDZDQUE2QztBQUNyRSxNQUFNQyxjQUFjO0lBQzFCO1FBQ0MsVUFBVTtZQUNUO2dCQUNDLGdCQUFnQjtnQkFDaEIsUUFBUTtnQkFDUixRQUFRO1lBQ1Q7WUFDQTtnQkFDQyxnQkFBZ0I7Z0JBQ2hCLFFBQVE7Z0JBQ1IsUUFBUTtZQUNUO1NBQ0E7UUFDRCxRQUFRO1FBQ1IsV0FBVyxFQUFFO1FBQ2IsbUJBQW1CO1FBQ25CLFFBQVE7SUFDVDtJQUNBO1FBQ0MsVUFBVTtZQUNUO2dCQUNDLGdCQUFnQjtnQkFDaEIsUUFBUTtnQkFDUixRQUFRO1lBQ1Q7U0FDQTtRQUNELFFBQVE7UUFDUixXQUFXO1lBQ1Y7Z0JBQ0MsZ0JBQWdCO2dCQUNoQixRQUFRO2dCQUNSLFFBQVE7WUFDVDtTQUNBO1FBQ0QsbUJBQW1CO1FBQ25CLFFBQVE7SUFDVDtJQUNBO1FBQ0MsVUFBVTtZQUNUO2dCQUNDLGdCQUFnQjtnQkFDaEIsUUFBUTtnQkFDUixRQUFRO1lBQ1Q7U0FDQTtRQUNELFFBQVE7UUFDUixXQUFXO1lBQ1Y7Z0JBQ0MsZ0JBQWdCO2dCQUNoQixRQUFRO2dCQUNSLFFBQVE7WUFDVDtTQUNBO1FBQ0QsbUJBQW1CO1FBQ25CLFFBQVE7SUFDVDtDQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdG9yYWdlLWFwcC8uL3BhZ2VzL2NvbnN0YW50LmpzP2VjYzMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IEFQSV9VUkwgPSBcImh0dHBzOi8vZXRoLWhvbGVza3kuYmxhc3RhcGkuaW8vZWU3MjhjYzQtMmNjMC00YjVlLTk1MTUtODA1NmEwMGU1ZTcyXCI7XHJcbmV4cG9ydCBjb25zdCBQUklWQVRFX0tFWSA9XCI2YzBiMDE3N2RmMzY5ZTBkYWRiMjBmMTg4MDZiODFlOTdiZDhhZWZhOWU5NjU4OTljNDVjOTM2YzM4Mzg3YzIwXCI7XHJcbmV4cG9ydCBjb25zdCBjb250cmFjdEFkZHJlc3MgPSBcIjB4NWQ0MTI1ZDFjZWFjNzZlODc1MTIwYzhiN2Q1OGRjNDU3MjQzMWI4N1wiO1xyXG5leHBvcnQgY29uc3QgY29udHJhY3RBYmkgPSBbXHJcblx0e1xyXG5cdFx0XCJpbnB1dHNcIjogW1xyXG5cdFx0XHR7XHJcblx0XHRcdFx0XCJpbnRlcm5hbFR5cGVcIjogXCJzdHJpbmdcIixcclxuXHRcdFx0XHRcIm5hbWVcIjogXCJmaWxlTmFtZVwiLFxyXG5cdFx0XHRcdFwidHlwZVwiOiBcInN0cmluZ1wiXHJcblx0XHRcdH0sXHJcblx0XHRcdHtcclxuXHRcdFx0XHRcImludGVybmFsVHlwZVwiOiBcInN0cmluZ1wiLFxyXG5cdFx0XHRcdFwibmFtZVwiOiBcImlwZnNIYXNoXCIsXHJcblx0XHRcdFx0XCJ0eXBlXCI6IFwic3RyaW5nXCJcclxuXHRcdFx0fVxyXG5cdFx0XSxcclxuXHRcdFwibmFtZVwiOiBcInVwbG9hZFwiLFxyXG5cdFx0XCJvdXRwdXRzXCI6IFtdLFxyXG5cdFx0XCJzdGF0ZU11dGFiaWxpdHlcIjogXCJub25wYXlhYmxlXCIsXHJcblx0XHRcInR5cGVcIjogXCJmdW5jdGlvblwiXHJcblx0fSxcclxuXHR7XHJcblx0XHRcImlucHV0c1wiOiBbXHJcblx0XHRcdHtcclxuXHRcdFx0XHRcImludGVybmFsVHlwZVwiOiBcInN0cmluZ1wiLFxyXG5cdFx0XHRcdFwibmFtZVwiOiBcImZpbGVOYW1lXCIsXHJcblx0XHRcdFx0XCJ0eXBlXCI6IFwic3RyaW5nXCJcclxuXHRcdFx0fVxyXG5cdFx0XSxcclxuXHRcdFwibmFtZVwiOiBcImdldElQRlNIYXNoXCIsXHJcblx0XHRcIm91dHB1dHNcIjogW1xyXG5cdFx0XHR7XHJcblx0XHRcdFx0XCJpbnRlcm5hbFR5cGVcIjogXCJzdHJpbmdcIixcclxuXHRcdFx0XHRcIm5hbWVcIjogXCJcIixcclxuXHRcdFx0XHRcInR5cGVcIjogXCJzdHJpbmdcIlxyXG5cdFx0XHR9XHJcblx0XHRdLFxyXG5cdFx0XCJzdGF0ZU11dGFiaWxpdHlcIjogXCJ2aWV3XCIsXHJcblx0XHRcInR5cGVcIjogXCJmdW5jdGlvblwiXHJcblx0fSxcclxuXHR7XHJcblx0XHRcImlucHV0c1wiOiBbXHJcblx0XHRcdHtcclxuXHRcdFx0XHRcImludGVybmFsVHlwZVwiOiBcInN0cmluZ1wiLFxyXG5cdFx0XHRcdFwibmFtZVwiOiBcImZpbGVOYW1lXCIsXHJcblx0XHRcdFx0XCJ0eXBlXCI6IFwic3RyaW5nXCJcclxuXHRcdFx0fVxyXG5cdFx0XSxcclxuXHRcdFwibmFtZVwiOiBcImlzRmlsZVN0b3JlZFwiLFxyXG5cdFx0XCJvdXRwdXRzXCI6IFtcclxuXHRcdFx0e1xyXG5cdFx0XHRcdFwiaW50ZXJuYWxUeXBlXCI6IFwiYm9vbFwiLFxyXG5cdFx0XHRcdFwibmFtZVwiOiBcIlwiLFxyXG5cdFx0XHRcdFwidHlwZVwiOiBcImJvb2xcIlxyXG5cdFx0XHR9XHJcblx0XHRdLFxyXG5cdFx0XCJzdGF0ZU11dGFiaWxpdHlcIjogXCJ2aWV3XCIsXHJcblx0XHRcInR5cGVcIjogXCJmdW5jdGlvblwiXHJcblx0fVxyXG5dOyJdLCJuYW1lcyI6WyJBUElfVVJMIiwiUFJJVkFURV9LRVkiLCJjb250cmFjdEFkZHJlc3MiLCJjb250cmFjdEFiaSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/constant.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/uploadData.js"));
module.exports = __webpack_exports__;

})();